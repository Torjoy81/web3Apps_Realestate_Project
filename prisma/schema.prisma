datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js" 
}

model Account {
  id                 String  @id @default(cuid())
  userId             String  @map("user_id")
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  first_name    String
  last_name     String
  email         String   @unique
  phone_no      String
  country       String   @default("Germany")
  profession    Profession 
  dateOfbirth   DateTime
  password      String     
  emailVerified DateTime?
  image         String?   @db.LongText
  role    Role     @default(USER)
  accounts      Account[]
  sessions      Session[]
  description   String?  @db.Text
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}



model Properties{
  id Int @id @default(autoincrement())
  property_title String
  property_address String
  price  Decimal @db.Decimal(10,2) @default(0.00)
  description String? @db.Text
  sqft Int
  bedroom Int
  bathroom Int
  
  ImageSM String?
  ImageLG String?
  ImageMG String?
  agentID String

  agent Agent  @relation(fields: [agentID], references: [id], onDelete: Cascade)
}

model Agent{
  id            String    @id @default(cuid())
  first_name    String
  last_name     String
  email         String
  phone_no      String
  properties    Properties[]

  @@unique([email, phone_no])
}

enum Role {
  USER
  ADMIN
}

enum Profession {
 DOCTOR
 ENGENIEER
 BUSINESS
 PUBLIC_SERVICE
 POLICE
 JOURNALIST
 MEDIA_PERSON
 INVESTOR
 UNEMPLOYED
 DEFENSE_OFICIER
 OWN_SHOP
}